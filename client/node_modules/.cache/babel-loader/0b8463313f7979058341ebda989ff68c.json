{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ddinformatic/Desktop/atis_task/src/components/FormElements.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form as FormikForm, Field, ErrorMessage, useFormikContext, useField, useFormik } from 'formik';\nexport function Form(props) {\n  return /*#__PURE__*/_jsxDEV(Formik, { ...props,\n    children: /*#__PURE__*/_jsxDEV(FormikForm, {\n      className: \"needs-validation\",\n      novalidate: \"\",\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_c = Form;\nexport function TextField(props) {\n  const {\n    name,\n    label,\n    placeholder,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      for: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: name,\n      id: name,\n      placeholder: placeholder || \"\",\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      name: name,\n      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c2 = TextField;\nexport function SelectField(props) {\n  const {\n    name,\n    label,\n    options\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      for: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      as: \"select\",\n      id: name,\n      name: name,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Choose...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), options.map((optn, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: optn.value,\n        label: optn.label || optn.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 47\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      name: name,\n      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c3 = SelectField;\nexport function SubmitButton(props) {\n  _s();\n\n  const {\n    title,\n    ...rest\n  } = props;\n  const {\n    isSubmitting\n  } = useFormikContext();\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"submit\",\n    ...rest,\n    disabled: isSubmitting,\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SubmitButton, \"keqgkJVvzyzEg9Tlt68+ojV3Txo=\", false, function () {\n  return [useFormikContext];\n});\n\n_c4 = SubmitButton;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"TextField\");\n$RefreshReg$(_c3, \"SelectField\");\n$RefreshReg$(_c4, \"SubmitButton\");","map":{"version":3,"sources":["/home/ddinformatic/Desktop/atis_task/src/components/FormElements.js"],"names":["React","Formik","Form","FormikForm","Field","ErrorMessage","useFormikContext","useField","useFormik","props","children","TextField","name","label","placeholder","rest","msg","color","SelectField","options","map","optn","index","value","SubmitButton","title","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Formik,\n    Form as FormikForm,\n    Field,\n    ErrorMessage,\n    useFormikContext,\n    useField,\n    useFormik\n} from 'formik';\n\nexport function Form(props) {\n    return (\n        <Formik\n            {...props}\n        >\n            <FormikForm className=\"needs-validation\" novalidate=\"\">\n                {props.children}\n            </FormikForm>\n        </Formik>)\n}\n\nexport function TextField(props) {\n    const { name, label, placeholder, ...rest } = props\n    return (\n        <>\n            {label && <label for={name}>{label}</label>}\n            <Field\n                className=\"form-control\"\n                type=\"text\"\n                name={name}\n                id={name}\n                placeholder={placeholder || \"\"} \n                {...rest}\n            />\n            <ErrorMessage name={name} render={msg => <div style={{ color: 'red' }} >{msg}</div>} />\n        </>\n    )\n}\n\n\nexport function SelectField(props) {\n    const { name, label, options } = props\n    return (\n        <>\n            {label && <label for={name}>{label}</label>}\n            <Field\n                as=\"select\"\n                id={name}\n                name={name}\n            >\n                <option value=\"\" >Choose...</option>\n                {options.map((optn, index) => <option value={optn.value} label={optn.label || optn.value} />)}\n            </Field>\n            <ErrorMessage name={name} render={msg => <div style={{ color: 'red' }} >{msg}</div>} />\n        </>\n    )\n}\n\nexport function SubmitButton(props){\n    const { title, ...rest } = props;\n    const { isSubmitting } = useFormikContext();\n    \n    return (\n        <button type=\"submit\" {...rest} disabled={isSubmitting}>{title}</button>\n    )\n}"]},"metadata":{},"sourceType":"module"}