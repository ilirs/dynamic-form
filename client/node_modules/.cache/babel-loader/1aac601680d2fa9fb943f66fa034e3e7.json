{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ddinformatic/Desktop/atis_task/src/containers/Home/index.js\";\nimport React, { Component } from 'react';\nimport { Form, TextField, SelectField, SubmitButton } from './../../components/FormElements';\nimport * as Yup from 'yup';\nconst formSchema1 = {\n  form_inputs: [{\n    label: \"Person name\",\n    name: \"person_name\",\n    type: \"text\",\n    value: null,\n    rules: \"required|min:3|max:64\",\n    options: [],\n    default_value: null,\n    multiple: false,\n    readonly: false,\n    placeholder: \"Person name\",\n    info: \"Example value of how to fill the input\"\n  }, {\n    label: \"Country\",\n    name: \"country\",\n    type: \"select\",\n    value: null,\n    rules: \"required|min:2|max:64\",\n    options: [{\n      label: \"Albania\",\n      value: \"albania\"\n    }, {\n      label: \"Italy\",\n      value: \"italy\"\n    }],\n    default_value: \"albania\",\n    multiple: false,\n    readonly: false,\n    placeholder: \"select\",\n    info: \"Example value of how to fill the input\"\n  }]\n};\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handleInputChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      const type = event.target.type;\n\n      if (this.validateInputs(type, name)) {\n        this.setState({\n          [name]: value\n        });\n      }\n    };\n\n    this.validateInputs = (type, name) => {\n      console.log(\"uaua\", this.state[name]);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [formSchema1.form_inputs.map(inp => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: inp.name,\n            children: inp.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), inp.type === 'select' ? /*#__PURE__*/_jsxDEV(\"select\", {\n            type: inp.type,\n            name: inp.name,\n            className: \"form-control\",\n            defaultValue: inp.default_value,\n            onChange: this.handleInputChange,\n            id: inp.name,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              children: inp.placeholder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this), inp.options.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n              label: opt.label,\n              value: opt.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 61\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: inp.type,\n            name: inp.name,\n            defaultValue: inp.default_value,\n            placeholder: inp.placeholder,\n            className: \"form-control\",\n            onChange: this.handleInputChange,\n            id: inp.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/ddinformatic/Desktop/atis_task/src/containers/Home/index.js"],"names":["React","Component","Form","TextField","SelectField","SubmitButton","Yup","formSchema1","form_inputs","label","name","type","value","rules","options","default_value","multiple","readonly","placeholder","info","Home","state","handleInputChange","event","target","validateInputs","setState","console","log","render","map","inp","opt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Form,\n    TextField,\n    SelectField,\n    SubmitButton\n} from './../../components/FormElements';\nimport * as Yup from 'yup';\n\nconst formSchema1 = {\n    form_inputs: [\n        {\n            label: \"Person name\",\n            name: \"person_name\",\n            type: \"text\",\n            value: null,\n            rules: \"required|min:3|max:64\",\n            options: [],\n            default_value: null,\n            multiple: false,\n            readonly: false,\n            placeholder: \"Person name\",\n            info: \"Example value of how to fill the input\"\n        },\n        {\n            label: \"Country\",\n            name: \"country\",\n            type: \"select\",\n            value: null,\n            rules: \"required|min:2|max:64\",\n            options: [\n                {\n                    label: \"Albania\",\n                    value: \"albania\"\n                },\n                {\n                    label: \"Italy\",\n                    value: \"italy\"\n                }\n            ],\n            default_value: \"albania\",\n            multiple: false,\n            readonly: false,\n            placeholder: \"select\",\n            info: \"Example value of how to fill the input\"\n        }\n    ]\n}\n\n\nclass Home extends Component {\n\n    state = {\n\n    }\n\n    handleInputChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        const type = event.target.type;\n        if (this.validateInputs(type, name)) {\n            this.setState({\n                [name]: value\n            });\n        }\n    }\n\n    validateInputs = (type, name) => {\n        \n        console.log(\"uaua\", this.state.[name])\n\n\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <form>\n                    {formSchema1.form_inputs.map(inp => (\n                        <div className=\"form-group\">\n                            <label htmlFor={inp.name}>{inp.label}</label>\n\n                            {inp.type === 'select' ?\n                                <select\n                                    type={inp.type}\n                                    name={inp.name}\n                                    className=\"form-control\"\n                                    defaultValue={inp.default_value}\n                                    onChange={this.handleInputChange}\n                                    id={inp.name}>\n                                    <option selected>{inp.placeholder}</option>\n                                    {inp.options.map(opt => <option label={opt.label} value={opt.value}></option>)}\n\n\n                                </select> :\n                                <input\n                                    type={inp.type}\n                                    name={inp.name}\n                                    defaultValue={inp.default_value}\n                                    placeholder={inp.placeholder}\n                                    className=\"form-control\"\n                                    onChange={this.handleInputChange}\n                                    id={inp.name}></input>\n                            }\n\n                        </div>\n                    ))}\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                </form>\n            </div>\n        )\n    }\n\n\n}\n\nexport default Home;\n\n"]},"metadata":{},"sourceType":"module"}