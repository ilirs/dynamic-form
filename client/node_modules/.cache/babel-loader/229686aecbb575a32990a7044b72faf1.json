{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ddinformatic/Desktop/atis_task/src/containers/Home/index.js\";\nimport React, { Component } from 'react'; // import {\n//     Form,\n//     TextField,\n//     SelectField,\n//     SubmitButton\n// } from './../../components/FormElements';\n\nimport SimpleReactValidator from 'simple-react-validator'; // import * as Yup from 'yup';\n\nconst formSchema1 = {\n  form_inputs: [{\n    label: \"Person name\",\n    name: \"person_name\",\n    type: \"text\",\n    value: null,\n    rules: \"required|min:3|max:64\",\n    options: [],\n    default_value: null,\n    multiple: false,\n    readonly: false,\n    placeholder: \"Person name\",\n    info: \"Example value of how to fill the input\"\n  }, {\n    label: \"Country\",\n    name: \"country\",\n    type: \"select\",\n    value: null,\n    rules: \"required|min:2|max:64\",\n    options: [{\n      label: \"Albania\",\n      value: \"albania\"\n    }, {\n      label: \"Italy\",\n      value: \"italy\"\n    }],\n    default_value: \"albania\",\n    multiple: false,\n    readonly: false,\n    placeholder: \"select\",\n    info: \"Example value of how to fill the input\"\n  }]\n};\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      const type = event.target.type;\n      this.setState({\n        [name]: value\n      }); // await this.validateInputs(type, name);\n    };\n\n    this.handleSave = e => {\n      e.preventDefault();\n\n      if (this.validator.allValid()) {\n        alert('You submitted the form and stuff!');\n      } else {\n        this.validator.showMessages();\n        this.forceUpdate();\n      }\n    };\n\n    this.validator = new SimpleReactValidator();\n    this.state = {\n      error: 'Fill the fields'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [formSchema1.form_inputs.map((inp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: inp.name,\n            children: inp.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), inp.type === 'select' ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              type: inp.type,\n              name: inp.name,\n              className: \"form-control\",\n              defaultValue: inp.default_value,\n              onChange: this.handleInputChange,\n              id: inp.name,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: inp.placeholder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 41\n              }, this), inp.options.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                label: opt.label,\n                value: opt.value\n              }, opt.label, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 65\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 37\n            }, this), this.validator.message(inp.name, this.state[inp.name], inp.rules)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: inp.type,\n              name: inp.name,\n              defaultValue: inp.default_value,\n              placeholder: inp.placeholder,\n              className: \"form-control\",\n              onChange: this.handleInputChange,\n              id: inp.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 37\n            }, this), this.validator.message(inp.name, this.state[inp.name], inp.rules)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: event => this.handleSave(event),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/ddinformatic/Desktop/atis_task/src/containers/Home/index.js"],"names":["React","Component","SimpleReactValidator","formSchema1","form_inputs","label","name","type","value","rules","options","default_value","multiple","readonly","placeholder","info","Home","constructor","props","handleInputChange","event","target","setState","handleSave","e","preventDefault","validator","allValid","alert","showMessages","forceUpdate","state","error","render","map","inp","index","opt","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import {\n//     Form,\n//     TextField,\n//     SelectField,\n//     SubmitButton\n// } from './../../components/FormElements';\nimport SimpleReactValidator from 'simple-react-validator';\n// import * as Yup from 'yup';\n\nconst formSchema1 = {\n    form_inputs: [\n        {\n            label: \"Person name\",\n            name: \"person_name\",\n            type: \"text\",\n            value: null,\n            rules: \"required|min:3|max:64\",\n            options: [],\n            default_value: null,\n            multiple: false,\n            readonly: false,\n            placeholder: \"Person name\",\n            info: \"Example value of how to fill the input\"\n        },\n        {\n            label: \"Country\",\n            name: \"country\",\n            type: \"select\",\n            value: null,\n            rules: \"required|min:2|max:64\",\n            options: [\n                {\n                    label: \"Albania\",\n                    value: \"albania\"\n                },\n                {\n                    label: \"Italy\",\n                    value: \"italy\"\n                }\n            ],\n            default_value: \"albania\",\n            multiple: false,\n            readonly: false,\n            placeholder: \"select\",\n            info: \"Example value of how to fill the input\"\n        }\n    ]\n}\n\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props)\n        this.validator = new SimpleReactValidator();\n        this.state = {\n            error: 'Fill the fields'\n        }\n    }\n\n    handleInputChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        const type = event.target.type;\n        this.setState({\n            [name]: value\n        });\n        // await this.validateInputs(type, name);\n    }\n\n    // validateInputs = (type, name) => {\n    //     if (this.state[name] !== null) {\n    //         if (this.state[name].length > 3 &&\n    //             this.state[name].length < 64) {\n    //             this.setState({\n    //                 error: ''\n    //             })\n    //             return true;\n    //         }\n    //         else {\n    //             this.setState({\n    //                 error: `${name} should be greater than:3 char and smaller than: 64!`\n    //             })\n    //             return false;\n    //         }\n    //     }\n    //     else {\n    //         this.setState({\n    //             error: `${name} is required!`\n    //         })\n    //         return false;\n    //     }\n    // }\n\n    handleSave = (e) => {\n        e.preventDefault();\n        if (this.validator.allValid()) {\n            alert('You submitted the form and stuff!');\n        } else {\n            this.validator.showMessages();\n            this.forceUpdate();\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <form>\n                    {formSchema1.form_inputs.map((inp, index) => (\n                        <div className=\"form-group\" key={index}>\n                            <label htmlFor={inp.name}>{inp.label}</label>\n\n                            {inp.type === 'select' ?\n                                <React.Fragment>\n                                    <select\n                                        type={inp.type}\n                                        name={inp.name}\n                                        className=\"form-control\"\n                                        defaultValue={inp.default_value}\n                                        onChange={this.handleInputChange}\n                                        id={inp.name}>\n                                        <option value=\"\">{inp.placeholder}</option>\n                                        {inp.options.map(opt => <option key={opt.label} label={opt.label} value={opt.value}></option>)}\n\n                                    </select>\n                                    {this.validator.message(inp.name, this.state[inp.name], inp.rules)}\n                                </React.Fragment>\n                                :\n                                <React.Fragment>\n                                    <input\n                                        type={inp.type}\n                                        name={inp.name}\n                                        defaultValue={inp.default_value}\n                                        placeholder={inp.placeholder}\n                                        className=\"form-control\"\n                                        onChange={this.handleInputChange}\n                                        id={inp.name}></input>\n                                    {this.validator.message(inp.name, this.state[inp.name], inp.rules)}\n                                </React.Fragment>\n                            }\n                        </div>\n                    ))}\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        onClick={(event) => this.handleSave(event)}>Save</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Home;\n\n"]},"metadata":{},"sourceType":"module"}