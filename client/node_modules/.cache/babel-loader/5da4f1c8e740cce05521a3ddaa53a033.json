{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ddinformatic/Desktop/atis_task/src/containers/Home/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, TextField, SelectField, SubmitButton } from './../../components/FormElements';\nconst formSchema = {\n  name: {\n    type: \"text\",\n    label: \"Name\",\n    required: true\n  },\n  email: {\n    type: \"email\",\n    label: \"Email\",\n    required: true\n  },\n  role: {\n    type: \"select\",\n    label: \"Role\",\n    required: true,\n    options: [{\n      label: \"Admin\",\n      value: \"admin\"\n    }, {\n      label: \"User\",\n      value: \"user\"\n    }]\n  }\n};\n\nconst Home = () => {\n  _s();\n\n  const [formData, setFormData] = useState({});\n  const [validationSchema, setValidationSchema] = useState({});\n\n  const onSubmit = (values, {\n    setSubmitting,\n    resetForm,\n    setStatus\n  }) => {\n    console.log(values);\n    setSubmitting(false);\n  };\n\n  useEffect(() => {\n    initForm(formSchema);\n  }, []);\n\n  const initForm = formSchema => {\n    let _formData = {};\n    let _validationSchema = {};\n\n    for (var key of Object.keys(formSchema)) {\n      _formData[key] = \"\";\n\n      if (formSchema[key].type === \"text\") {\n        _validationSchema[key] = Yup.string();\n      } else if (formSchema[key].type === \"email\") {\n        _validationSchema[key] = Yup.string().email();\n      } else if (formSchema[key].type === \"select\") {\n        _validationSchema[key] = Yup.string().oneOf(formSchema[key].options.map(o => o.value));\n      }\n\n      if (formSchema[key].required) {\n        _validationSchema[key] = _validationSchema[key].required('Required');\n      }\n    }\n\n    setFormData(_formData);\n    setValidationSchema(Yup.object().shape({ ..._validationSchema\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      enableReinitialize: true,\n      initialValues: formData,\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"name\",\n          label: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email\",\n          label: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(SelectField, {\n          name: \"role\",\n          label: \"Role\",\n          options: [{\n            label: \"Admin\",\n            value: \"admin\"\n          }, {\n            label: \"User\",\n            value: \"user\"\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        title: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"V69Ydj/SmCPFul6TUqbZz8hvyxk=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/ddinformatic/Desktop/atis_task/src/containers/Home/index.js"],"names":["React","useState","Form","TextField","SelectField","SubmitButton","formSchema","name","type","label","required","email","role","options","value","Home","formData","setFormData","validationSchema","setValidationSchema","onSubmit","values","setSubmitting","resetForm","setStatus","console","log","useEffect","initForm","_formData","_validationSchema","key","Object","keys","Yup","string","oneOf","map","o","object","shape"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACIC,IADJ,EAEIC,SAFJ,EAGIC,WAHJ,EAIIC,YAJJ,QAKO,iCALP;AAQA,MAAMC,UAAU,GAAG;AACfC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,MADJ;AAEFC,IAAAA,KAAK,EAAE,MAFL;AAGFC,IAAAA,QAAQ,EAAE;AAHR,GADS;AAMfC,EAAAA,KAAK,EAAE;AACHH,IAAAA,IAAI,EAAE,OADH;AAEHC,IAAAA,KAAK,EAAE,OAFJ;AAGHC,IAAAA,QAAQ,EAAE;AAHP,GANQ;AAWfE,EAAAA,IAAI,EAAE;AACFJ,IAAAA,IAAI,EAAE,QADJ;AAEFC,IAAAA,KAAK,EAAE,MAFL;AAGFC,IAAAA,QAAQ,EAAE,IAHR;AAIFG,IAAAA,OAAO,EAAE,CACL;AACIJ,MAAAA,KAAK,EAAE,OADX;AAEIK,MAAAA,KAAK,EAAE;AAFX,KADK,EAKL;AACIL,MAAAA,KAAK,EAAE,MADX;AAEIK,MAAAA,KAAK,EAAE;AAFX,KALK;AAJP;AAXS,CAAnB;;AA8BA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,gBAAD,EAAmBC,mBAAnB,IAA0ClB,QAAQ,CAAC,EAAD,CAAxD;;AAEA,QAAMmB,QAAQ,GAAG,CAACC,MAAD,EAAS;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA;AAA5B,GAAT,KAAqD;AAClEC,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACAC,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAHD;;AAOAK,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,QAAQ,CAACtB,UAAD,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMsB,QAAQ,GAAItB,UAAD,IAAgB;AAC7B,QAAIuB,SAAS,GAAG,EAAhB;AACA,QAAIC,iBAAiB,GAAG,EAAxB;;AAEA,SAAI,IAAIC,GAAR,IAAeC,MAAM,CAACC,IAAP,CAAY3B,UAAZ,CAAf,EAAuC;AACnCuB,MAAAA,SAAS,CAACE,GAAD,CAAT,GAAiB,EAAjB;;AAEA,UAAGzB,UAAU,CAACyB,GAAD,CAAV,CAAgBvB,IAAhB,KAAyB,MAA5B,EAAmC;AAC/BsB,QAAAA,iBAAiB,CAACC,GAAD,CAAjB,GAAyBG,GAAG,CAACC,MAAJ,EAAzB;AACH,OAFD,MAEM,IAAG7B,UAAU,CAACyB,GAAD,CAAV,CAAgBvB,IAAhB,KAAyB,OAA5B,EAAoC;AACtCsB,QAAAA,iBAAiB,CAACC,GAAD,CAAjB,GAAyBG,GAAG,CAACC,MAAJ,GAAaxB,KAAb,EAAzB;AACH,OAFK,MAEA,IAAGL,UAAU,CAACyB,GAAD,CAAV,CAAgBvB,IAAhB,KAAyB,QAA5B,EAAqC;AACvCsB,QAAAA,iBAAiB,CAACC,GAAD,CAAjB,GAAyBG,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB9B,UAAU,CAACyB,GAAD,CAAV,CAAgBlB,OAAhB,CAAwBwB,GAAxB,CAA4BC,CAAC,IAAIA,CAAC,CAACxB,KAAnC,CAAnB,CAAzB;AACH;;AAED,UAAGR,UAAU,CAACyB,GAAD,CAAV,CAAgBrB,QAAnB,EAA4B;AACxBoB,QAAAA,iBAAiB,CAACC,GAAD,CAAjB,GAAyBD,iBAAiB,CAACC,GAAD,CAAjB,CAAuBrB,QAAvB,CAAgC,UAAhC,CAAzB;AACH;AACJ;;AAEDO,IAAAA,WAAW,CAACY,SAAD,CAAX;AACAV,IAAAA,mBAAmB,CAACe,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB,EAAE,GAAGV;AAAL,KAAnB,CAAD,CAAnB;AACH,GAtBD;;AAwBA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,kBAAkB,MADtB;AAEI,MAAA,aAAa,EAAEd,QAFnB;AAGI,MAAA,QAAQ,EAAEI,QAHd;AAAA,8BAKI;AAAA,+BACI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eAWI;AAAA,+BACI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ,eAiBI;AAAA,+BACI,QAAC,WAAD;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAC,MAFV;AAGI,UAAA,OAAO,EAAE,CACL;AACIX,YAAAA,KAAK,EAAE,OADX;AAEIK,YAAAA,KAAK,EAAE;AAFX,WADK,EAKL;AACIL,YAAAA,KAAK,EAAE,MADX;AAEIK,YAAAA,KAAK,EAAE;AAFX,WALK;AAHb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAiCI,QAAC,YAAD;AACI,QAAA,KAAK,EAAC;AADV;AAAA;AAAA;AAAA;AAAA,cAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH,CAnFD;;GAAMC,I;;KAAAA,I;AAqFN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n    Form,\n    TextField,\n    SelectField,\n    SubmitButton\n} from './../../components/FormElements';\n\n\nconst formSchema = {\n    name: {\n        type: \"text\",\n        label: \"Name\",\n        required: true\n    },\n    email: {\n        type: \"email\",\n        label: \"Email\",\n        required: true\n    },\n    role: {\n        type: \"select\",\n        label: \"Role\",\n        required: true,\n        options: [\n            {\n                label: \"Admin\",\n                value: \"admin\"\n            },\n            {\n                label: \"User\",\n                value: \"user\"\n            }\n        ]\n    }\n}\n\n\n\nconst Home = () => {\n\n    const [formData, setFormData] = useState({});\n    const [validationSchema, setValidationSchema] = useState({});\n\n    const onSubmit = (values, { setSubmitting, resetForm, setStatus }) => {\n        console.log(values);\n        setSubmitting(false);\n    }\n\n\n\n    useEffect(() => {   \n        initForm(formSchema);\n    }, []);\n\n\n    const initForm = (formSchema) => {\n        let _formData = {};\n        let _validationSchema = {};\n\n        for(var key of Object.keys(formSchema)){\n            _formData[key] = \"\";\n\n            if(formSchema[key].type === \"text\"){\n                _validationSchema[key] = Yup.string();\n            }else if(formSchema[key].type === \"email\"){\n                _validationSchema[key] = Yup.string().email()\n            }else if(formSchema[key].type === \"select\"){\n                _validationSchema[key] = Yup.string().oneOf(formSchema[key].options.map(o => o.value));\n            }\n\n            if(formSchema[key].required){\n                _validationSchema[key] = _validationSchema[key].required('Required');\n            }\n        }\n\n        setFormData(_formData);\n        setValidationSchema(Yup.object().shape({ ..._validationSchema }));\n    }\n\n    return (\n        <div className=\"App\">\n            <Form\n                enableReinitialize\n                initialValues={formData}\n                onSubmit={onSubmit}\n            >\n                <div>\n                    <TextField\n                        name=\"name\"\n                        label=\"Name\"\n                    />\n                </div>\n                <div>\n                    <TextField\n                        name=\"email\"\n                        label=\"Email\"\n                    />\n                </div>\n                <div>\n                    <SelectField\n                        name=\"role\"\n                        label=\"Role\"\n                        options={[\n                            {\n                                label: \"Admin\",\n                                value: \"admin\"\n                            },\n                            {\n                                label: \"User\",\n                                value: \"user\"\n                            }\n                        ]}\n                    />\n                </div>\n                <SubmitButton\n                    title=\"Submit\"\n                />\n            </Form>\n        </div>\n    )\n\n}\n\nexport default Home;\n\n"]},"metadata":{},"sourceType":"module"}