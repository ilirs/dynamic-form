{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ddinformatic/Desktop/atis_task/src/containers/Home/index.js\";\nimport React, { Component } from 'react';\nimport { Form, TextField, SelectField, SubmitButton } from './../../components/FormElements';\nimport * as Yup from 'yup';\nconst formSchema1 = {\n  form_inputs: [{\n    label: \"Person name\",\n    name: \"person_name\",\n    type: \"text\",\n    value: null,\n    rules: \"required|min:3|max:64\",\n    options: [],\n    default_value: null,\n    multiple: false,\n    readonly: false,\n    placeholder: \"Person name\",\n    info: \"Example value of how to fill the input\"\n  }, {\n    label: \"Country\",\n    name: \"country\",\n    type: \"select\",\n    value: null,\n    rules: \"required|min:2|max:64\",\n    options: [{\n      label: \"Albania\",\n      value: \"albania\"\n    }, {\n      label: \"Italy\",\n      value: \"italy\"\n    }],\n    default_value: \"albania\",\n    multiple: false,\n    readonly: false,\n    placeholder: \"select\",\n    info: \"Example value of how to fill the input\"\n  }]\n};\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: 'error'\n    };\n\n    this.handleInputChange = async event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      const type = event.target.type;\n      await this.setState({\n        [name]: value\n      });\n      await this.validateInputs(type, name);\n    };\n\n    this.validateInputs = (type, name) => {\n      if (this.state[name] !== null) {\n        if (this.state[name].length > 3 && this.state[name].length < 64) {\n          this.setState({\n            error: ''\n          });\n          return true;\n        } else {\n          this.setState({\n            error: `${name} should be greater than:3 char and smaller than: 64!`\n          });\n          return false;\n        }\n      } else {\n        this.setState({\n          error: `${name} is required!`\n        });\n        return false;\n      }\n    };\n\n    this.handleSave = e => {\n      e.preventDefault();\n\n      if (this.state.error === '') {\n        console.log(\"Submited\");\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [formSchema1.form_inputs.map(inp => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: inp.name,\n            children: inp.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), inp.type === 'select' ? /*#__PURE__*/_jsxDEV(\"select\", {\n            type: inp.type,\n            name: inp.name,\n            className: \"form-control\",\n            defaultValue: inp.default_value,\n            onChange: this.handleInputChange,\n            id: inp.name,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              children: inp.placeholder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 37\n            }, this), inp.options.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n              label: opt.label,\n              value: opt.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 61\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: inp.type,\n            name: inp.name,\n            defaultValue: inp.default_value,\n            placeholder: inp.placeholder,\n            className: \"form-control\",\n            onChange: this.handleInputChange,\n            id: inp.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: event => this.handleSave(event),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/ddinformatic/Desktop/atis_task/src/containers/Home/index.js"],"names":["React","Component","Form","TextField","SelectField","SubmitButton","Yup","formSchema1","form_inputs","label","name","type","value","rules","options","default_value","multiple","readonly","placeholder","info","Home","state","error","handleInputChange","event","target","setState","validateInputs","length","handleSave","e","preventDefault","console","log","render","map","inp","opt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Form,\n    TextField,\n    SelectField,\n    SubmitButton\n} from './../../components/FormElements';\nimport * as Yup from 'yup';\n\nconst formSchema1 = {\n    form_inputs: [\n        {\n            label: \"Person name\",\n            name: \"person_name\",\n            type: \"text\",\n            value: null,\n            rules: \"required|min:3|max:64\",\n            options: [],\n            default_value: null,\n            multiple: false,\n            readonly: false,\n            placeholder: \"Person name\",\n            info: \"Example value of how to fill the input\"\n        },\n        {\n            label: \"Country\",\n            name: \"country\",\n            type: \"select\",\n            value: null,\n            rules: \"required|min:2|max:64\",\n            options: [\n                {\n                    label: \"Albania\",\n                    value: \"albania\"\n                },\n                {\n                    label: \"Italy\",\n                    value: \"italy\"\n                }\n            ],\n            default_value: \"albania\",\n            multiple: false,\n            readonly: false,\n            placeholder: \"select\",\n            info: \"Example value of how to fill the input\"\n        }\n    ]\n}\n\n\nclass Home extends Component {\n\n    state = {\n        error: 'error'\n    }\n\n    handleInputChange = async (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        const type = event.target.type;\n        await this.setState({\n            [name]: value\n        });\n        await this.validateInputs(type, name);\n    }\n\n    validateInputs = (type, name) => {\n        if (this.state[name] !== null) {\n            if (this.state[name].length > 3 &&\n                this.state[name].length < 64) {\n                this.setState({\n                    error: ''\n                })\n                return true;\n            }\n            else {\n                this.setState({\n                    error: `${name} should be greater than:3 char and smaller than: 64!`\n                })\n                return false;\n            }\n        }\n        else {\n            this.setState({\n                error: `${name} is required!`\n            })\n            return false;\n        }\n    }\n\n    handleSave = (e) => {\n        e.preventDefault();\n        if(this.state.error === ''){\n            console.log(\"Submited\")\n        }\n\n\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <form>\n                    {formSchema1.form_inputs.map(inp => (\n                        <div className=\"form-group\">\n                            <label htmlFor={inp.name}>{inp.label}</label>\n\n                            {inp.type === 'select' ?\n                                <select\n                                    type={inp.type}\n                                    name={inp.name}\n                                    className=\"form-control\"\n                                    defaultValue={inp.default_value}\n                                    onChange={this.handleInputChange}\n                                    id={inp.name}>\n                                    <option selected>{inp.placeholder}</option>\n                                    {inp.options.map(opt => <option label={opt.label} value={opt.value}></option>)}\n\n\n                                </select> :\n                                <input\n                                    type={inp.type}\n                                    name={inp.name}\n                                    defaultValue={inp.default_value}\n                                    placeholder={inp.placeholder}\n                                    className=\"form-control\"\n                                    onChange={this.handleInputChange}\n                                    id={inp.name}></input>\n                            }\n\n                        </div>\n                    ))}\n                    <div>\n                        {this.state.error}\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={(event) => this.handleSave(event)}>Save</button>\n                </form>\n            </div>\n        )\n    }\n\n\n}\n\nexport default Home;\n\n"]},"metadata":{},"sourceType":"module"}